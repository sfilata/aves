{"version":3,"sources":["webpack://Aves/webpack/universalModuleDefinition","webpack://Aves/webpack/bootstrap","webpack://Aves/./src/aves/Aves.ts","webpack://Aves/./src/aves/AvesAnalyser.ts","webpack://Aves/./src/aves/AvesChannels.ts","webpack://Aves/./src/drawer/DrawChannelWaves.ts","webpack://Aves/./src/drawer/DrawSpectrumAnalyser.ts","webpack://Aves/./src/drawer/DrawTimeDomainAnalyser.ts","webpack://Aves/./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Aves\"] = factory();\n\telse\n\t\troot[\"Aves\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export default class {\n  public audioCtx: AudioContext\n  public sampleRate: number\n  public audioBuffer: AudioBuffer\n  public source: AudioBufferSourceNode\n  // private\n  constructor() {\n    this.audioCtx = new AudioContext()\n    this.sampleRate = this.audioCtx.sampleRate\n    this.source = this.audioCtx.createBufferSource()\n    this.source.connect(this.audioCtx.destination)\n  }\n\n  decodeAudio(audioData: ArrayBuffer): Promise<AudioBufferSourceNode> {\n    return this.audioCtx\n      .decodeAudioData(audioData)\n      .then((buffer: AudioBuffer) => {\n        this.audioBuffer = buffer\n        this.source.buffer = buffer\n        return this.source\n      })\n  }\n\n  start() {\n    this.source.start(0)\n  }\n  stop() {\n    this.source.stop()\n  }\n}\n","import Aves from './Aves'\nexport default class {\n  private _analyserNode: AnalyserNode\n  private _freqPerIndex: number\n  private _bufferLength: number\n  public sampleRate: number\n  public byteFrequencyArray: Uint8Array\n  public byteTimeDomainArray: Uint8Array\n  public floatFrequencyArray: Float32Array\n  public maxHz: number = 16000\n  public minHz: number = 20\n  // private\n  constructor(aves: Aves) {\n    this._analyserNode = aves.audioCtx.createAnalyser()\n    aves.source.connect(this._analyserNode)\n\n    // default 2048\n    this._analyserNode.fftSize = 2048\n    this.sampleRate = aves.sampleRate\n    // Array[0] is the strength of frequencies from 0 to 23.4Hz.\n    // Array[1] is the strength of frequencies from 23.4Hz to 46.8Hz.\n    // Array[2] is the strength of frequencies from 46.8Hz to 70.2Hz.\n    // Array[3] is the strength of frequencies from 70.2Hz to 93.6Hz. ...\n    this._freqPerIndex = aves.sampleRate / this._analyserNode.fftSize\n\n    // ─────────────────────────────────────────────────────────────────\n    // 表示する最低、最高デジベルを設定\n    // ─────────────────────────────────────────────────────────────────\n    this.maxDecibels = 0\n    this.minDecibels = -100\n\n    // fftSize / 2\n    this._bufferLength = this._analyserNode.frequencyBinCount\n\n    // ─────────────────────────────────────────────────────────────────\n    // fftsizeが2048のときは、長さが1024の配列を作成\n    // ─────────────────────────────────────────────────────────────────\n    this.byteFrequencyArray = new Uint8Array(this._bufferLength)\n    this.byteTimeDomainArray = new Uint8Array(this._analyserNode.fftSize)\n    this.floatFrequencyArray = new Float32Array(this._bufferLength)\n  }\n\n  /**\n   * 入力されたhzが音声データ配列の何番目の要素なのかを返す\n   * @param {number} hz\n   * @returns {number}\n   */\n  indexAtSpecificHz(hz: number): number {\n    return Math.floor(hz / this._freqPerIndex)\n  }\n\n  /**\n   * 入力された配列番号がが音声データの何Hzあたるのかを返す\n   * @param {number} index\n   * @returns {number}\n   */\n  hzAtSpecificIndex(index: number): number {\n    return index * this._freqPerIndex\n  }\n\n  /**\n   *\n   * @returns\n   */\n  range(): number {\n    return this._analyserNode.maxDecibels - this._analyserNode.minDecibels\n  }\n\n  /**\n   * サンプルとサンプルの間の秒\n   * @returns\n   */\n  samplingInterval(): number {\n    return  1 / this.sampleRate\n  }\n  /**\n   * 表示するHzの最大と最低に当たるインデックス番号を返す\n   */\n  get maxHzIndex(): number {\n    return Math.floor(this.maxHz / this._freqPerIndex)\n  }\n  get minHzIndex(): number {\n    return Math.floor(this.minHz / this._freqPerIndex)\n  }\n\n  /**\n   * マックス、ミニマムデジベルのセッター、ゲッター\n   * マックスデジベルとミニマムデジベルは\n   * getFloatFrequencyData()でしか使えない\n   */\n  set maxDecibels(num: number) {\n    this._analyserNode.maxDecibels = num\n  }\n  get maxDecibels(): number {\n    return this._analyserNode.maxDecibels\n  }\n  set minDecibels(num: number) {\n    this._analyserNode.minDecibels = num\n  }\n  get minDecibels(): number {\n    return this._analyserNode.minDecibels\n  }\n\n  getByteFrequencyData() {\n    this._analyserNode.getByteFrequencyData(this.byteFrequencyArray)\n  }\n  getFloatFrequencyData() {\n    this._analyserNode.getFloatFrequencyData(this.floatFrequencyArray)\n  }\n  getByteTimeDomainData() {\n    this._analyserNode.getByteTimeDomainData(this.byteTimeDomainArray)\n  }\n}\n","import Aves from './Aves'\nexport default class {\n  public channelLs: Float32Array\n  public channelRs: Float32Array\n  // private\n  constructor(aves: Aves) {\n    console.log(aves.audioBuffer)\n\n    this.channelLs = new Float32Array(aves.audioBuffer.length)\n    this.channelRs = new Float32Array(aves.audioBuffer.length)\n\n    if (aves.audioBuffer.numberOfChannels > 1) {\n      this.channelLs.set(aves.audioBuffer.getChannelData(0))\n      this.channelRs.set(aves.audioBuffer.getChannelData(1))\n    } else if (aves.audioBuffer.numberOfChannels > 0) {\n      this.channelLs.set(aves.audioBuffer.getChannelData(0))\n    } else {\n      window.alert('The number of channels is invalid.')\n      return\n    }\n  }\n}\n","import AvesChannels from '../aves/AvesChannels'\nexport default class {\n  private _canvasWidth: number\n  private _canvasHeight: number\n  private _canvasElm: HTMLCanvasElement\n  private _ctx: CanvasRenderingContext2D\n  private _bgColor: string\n  private gridStyle: string = this.createColor(230, 230, 230, 0.5)\n  private scaleStyle: string = this.createColor(250, 250, 250, 1)\n\n  constructor(\n    elm: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeihgt: number\n  ) {\n    this._canvasElm = elm\n\n    this._canvasElm.width = this._canvasWidth = canvasWidth\n    this._canvasElm.height = this._canvasHeight = canvasHeihgt\n\n    this._ctx = this._canvasElm.getContext('2d')\n\n    this._bgColor = this.createColor(46, 40, 48)\n\n    this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight)\n    this._ctx.fillStyle = this._bgColor\n    this._ctx.fillRect(0, 0, this._canvasWidth, this._canvasHeight)\n  }\n\n  /**\n   * @param {number} r Red\n   * @param {number} g Green\n   * @param {number} b Blue\n   * @param {number} a Alpha\n   * @returns {string} CSS rgba()\n   */\n  createColor(r: number, g: number, b: number, a: number = 1): string {\n    return `rgba(${r}, ${g}, ${b}, ${a})`\n  }\n\n  /**\n   *\n   * フォント情報ストリングを作成する、後々ヘルパーとかに切り分けたほうがいい\n   * @param {string} fontSize\n   * @param {string} [type='']\n   * @param {string} [font='sans-serif']\n   * @returns {string}\n   */\n  createFont(\n    fontSize: string,\n    type: string = '',\n    font: string = 'sans-serif'\n  ): string {\n    return `${type} ${fontSize} ${font}`\n  }\n\n  draw(avesChannels: AvesChannels) {\n    console.log(avesChannels.channelLs)\n    this._ctx.beginPath()\n    for (var i = 0, len = avesChannels.channelLs.length; i < len; i++) {\n      var x = (i / len) * this._canvasWidth\n      var y = ((1 - avesChannels.channelLs[i]) / 2) * this._canvasHeight\n      if (i === 0) {\n        this._ctx.moveTo(x, y)\n      } else {\n        this._ctx.lineTo(x, y)\n      }\n    }\n    this._ctx.stroke()\n  }\n}\n","import AvesAnalyser from '../aves/AvesAnalyser'\nexport default class {\n  private _canvasWidth: number\n  private _canvasHeight: number\n  private _canvasElm: HTMLCanvasElement\n  private _ctx: CanvasRenderingContext2D\n  private _animationFrameId: number\n  private _bgColor: string\n  private _dispHz: number[] = [\n    30,\n    50,\n    100,\n    200,\n    500,\n    1000,\n    2000,\n    5000,\n    10000,\n    15000\n  ]\n  private _dispDecibel: number[] = [\n    0,\n    -10,\n    -20,\n    -30,\n    -40,\n    -50,\n    -60,\n    -70,\n    -80,\n    -90\n  ]\n\n  constructor(\n    elm: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeihgt: number\n  ) {\n    this._canvasElm = elm\n\n    this._canvasElm.width = this._canvasWidth = canvasWidth\n    this._canvasElm.height = this._canvasHeight = canvasHeihgt\n\n    this._ctx = this._canvasElm.getContext('2d')\n\n    this._bgColor = this.createColor(46, 40, 48)\n\n    this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight)\n    this._ctx.fillStyle = this._bgColor\n    this._ctx.fillRect(0, 0, this._canvasWidth, this._canvasHeight)\n  }\n\n  /**\n   * @param {number} num\n   * @returns 入力された数値の桁数を返す\n   */\n  seekDigit(num: number) {\n    return Math.LOG10E * Math.log(num)\n  }\n\n  /**\n   * @param {number} r Red\n   * @param {number} g Green\n   * @param {number} b Blue\n   * @param {number} a Alpha\n   * @returns {string} CSS rgba()\n   */\n  createColor(r: number, g: number, b: number, a: number = 1): string {\n    return `rgba(${r}, ${g}, ${b}, ${a})`\n  }\n\n  /**\n   *\n   * フォント情報ストリングを作成する、後々ヘルパーとかに切り分けたほうがいい\n   * @param {string} fontSize\n   * @param {string} [type='']\n   * @param {string} [font='sans-serif']\n   * @returns {string}\n   */\n  createFont(\n    fontSize: string,\n    type: string = '',\n    font: string = 'sans-serif'\n  ): string {\n    return `${type} ${fontSize} ${font}`\n  }\n\n  /**\n   * 特定のHzをX軸のどの部分に対数表示をすればいいかを\n   * 計算する。\n   * @param {number} hz\n   * @param {number} minHz\n   * @param {number} maxHz\n   * @returns {number} 横軸の画面位置\n   */\n  pointX(hz: number, minHz: number, maxHz: number): number {\n    return (\n      ((this.seekDigit(hz) - this.seekDigit(minHz)) /\n        (this.seekDigit(maxHz) - this.seekDigit(minHz))) *\n      this._canvasWidth\n    )\n  }\n\n  /**\n   * 描画メソッド\n   * @param {AvesAnalyser} avesAnalyser\n   */\n  draw(avesAnalyser: AvesAnalyser) {\n    // draw initialize\n    this._ctx.beginPath()\n    this._ctx.fillStyle = this._bgColor\n    this._ctx.fillRect(0, 0, this._canvasWidth, this._canvasHeight)\n\n    // ─────────────────────────────────────────────────────────────────\n    // 描画範囲は avesAnalyser.minHz < hz <= avesAnalyser.maxHz の間となる\n    // ─────────────────────────────────────────────────────────────────\n\n    // 後からグリッドを表示するための一時的な配列\n    const DispHzAndX: { text: string; pointX: number }[] = []\n\n    for (let i = 0; i <= avesAnalyser.maxHzIndex; i++) {\n      const pointX = this.pointX(\n        avesAnalyser.hzAtSpecificIndex(i),\n        avesAnalyser.minHz,\n        avesAnalyser.maxHz\n      )\n\n      // ─────────────────────────────────────────────────────────────────F\n      // プロットする点を得る処理\n      // ─────────────────────────────────────────────────────────────────\n      let pointY: number =\n        -1 *\n        ((avesAnalyser.floatFrequencyArray[i] - avesAnalyser.maxDecibels) /\n          avesAnalyser.range()) *\n        this._canvasHeight\n\n      if (i === avesAnalyser.minHzIndex) {\n        this._ctx.moveTo(0, pointY)\n      } else {\n        this._ctx.lineTo(pointX, pointY)\n      }\n\n      // ─────────────────────────────────────────────────────────────────\n      // 後からX軸に目盛りを描画するので今はデータを保存だけ\n      // ─────────────────────────────────────────────────────────────────\n      for (const hz of this._dispHz) {\n        if (avesAnalyser.indexAtSpecificHz(hz) === i) {\n          DispHzAndX.push({\n            text: hz < 1000 ? String(hz) + 'Hz' : String(hz / 1000) + 'kHz',\n            pointX: pointX\n          })\n        }\n      }\n    }\n\n    // ─────────────────────────────────────────────────────────────────\n    // 点から線を作る\n    // ─────────────────────────────────────────────────────────────────\n    this._ctx.strokeStyle = this.createColor(250, 250, 250, 1)\n    this._ctx.lineWidth = 2\n    this._ctx.stroke()\n\n    this._ctx.fillStyle = this.createColor(50, 50, 50, 0.8)\n    this._ctx.lineTo(this._canvasWidth, this._canvasHeight)\n    this._ctx.lineTo(0, this._canvasHeight)\n    this._ctx.closePath()\n    this._ctx.fill()\n\n    // グリッドとテキストを表示するために色とか諸々変更\n    const fontSize = 11\n    this._ctx.font = this.createFont(String(fontSize) + 'px')\n    const gridSize = 0.6\n    const gridStyle = this.createColor(230, 230, 230, 0.5)\n    const scaleStyle = this.createColor(250, 250, 250, 1)\n\n    // ─────────────────────────────────────────────────────────────────\n    // X軸に目盛りを描画\n    // ─────────────────────────────────────────────────────────────────\n    for (const value of DispHzAndX) {\n      this._ctx.fillStyle = gridStyle\n      this._ctx.fillRect(value.pointX, 0, gridSize, this._canvasHeight)\n      this._ctx.fillStyle = scaleStyle\n      this._ctx.fillText(\n        value.text,\n        value.pointX - 12,\n        this._canvasHeight - fontSize\n      )\n    }\n\n    // ─────────────────────────────────────────────────────────────────\n    // Y軸に目盛りを描画\n    // ─────────────────────────────────────────────────────────────────\n    for (const decibel of this._dispDecibel) {\n      if (decibel === 0) continue\n      const range = avesAnalyser.range()\n      const text = String(decibel) \n      const pointY = this._canvasHeight * -(decibel / range)\n\n      this._ctx.fillStyle = gridStyle\n      this._ctx.fillRect(0, pointY, this._canvasWidth, gridSize)\n      this._ctx.fillStyle = scaleStyle\n      this._ctx.fillText(text, 5, pointY + 12)\n    }\n\n  }\n\n  /**\n   *\n   *\n   * @param {AvesAnalyser} avesAnalyser\n   * requestAnimationFrameで自分自身を呼ぶ\n   */\n  animationStart(avesAnalyser: AvesAnalyser) {\n    avesAnalyser.getFloatFrequencyData()\n    this.draw(avesAnalyser)\n\n    this._animationFrameId = requestAnimationFrame(() =>\n      this.animationStart(avesAnalyser)\n    )\n  }\n\n  animationStop() {\n    cancelAnimationFrame(this._animationFrameId)\n  }\n}\n","import AvesAnalyser from '../aves/AvesAnalyser'\nexport default class {\n  private _canvasWidth: number\n  private _canvasHeight: number\n  private _canvasElm: HTMLCanvasElement\n  private _ctx: CanvasRenderingContext2D\n  private _animationFrameId: number\n  private _bgColor: string\n  private gridStyle: string = this.createColor(230, 230, 230, 0.5)\n  private scaleStyle: string = this.createColor(250, 250, 250, 1)\n  private _dispHz: number[] = [\n    30,\n    50,\n    100,\n    200,\n    500,\n    1000,\n    2000,\n    5000,\n    10000,\n    15000\n  ]\n  private _dispDecibel: number[] = [\n    0,\n    -10,\n    -20,\n    -30,\n    -40,\n    -50,\n    -60,\n    -70,\n    -80,\n    -90\n  ]\n\n  constructor(\n    elm: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeihgt: number\n  ) {\n    this._canvasElm = elm\n\n    this._canvasElm.width = this._canvasWidth = canvasWidth\n    this._canvasElm.height = this._canvasHeight = canvasHeihgt\n\n    this._ctx = this._canvasElm.getContext('2d')\n\n    this._bgColor = this.createColor(46, 40, 48)\n\n    this._ctx.clearRect(0, 0, this._canvasWidth, this._canvasHeight)\n    this._ctx.fillStyle = this._bgColor\n    this._ctx.fillRect(0, 0, this._canvasWidth, this._canvasHeight)\n  }\n\n  /**\n   * @param {number} num\n   * @returns 入力された数値の桁数を返す\n   */\n  seekDigit(num: number) {\n    return Math.LOG10E * Math.log(num)\n  }\n\n  /**\n   * @param {number} r Red\n   * @param {number} g Green\n   * @param {number} b Blue\n   * @param {number} a Alpha\n   * @returns {string} CSS rgba()\n   */\n  createColor(r: number, g: number, b: number, a: number = 1): string {\n    return `rgba(${r}, ${g}, ${b}, ${a})`\n  }\n\n  /**\n   *\n   * フォント情報ストリングを作成する、後々ヘルパーとかに切り分けたほうがいい\n   * @param {string} fontSize\n   * @param {string} [type='']\n   * @param {string} [font='sans-serif']\n   * @returns {string}\n   */\n  createFont(\n    fontSize: string,\n    type: string = '',\n    font: string = 'sans-serif'\n  ): string {\n    return `${type} ${fontSize} ${font}`\n  }\n\n  /**\n   * 特定のHzをX軸のどの部分に対数表示をすればいいかを\n   * 計算する。\n   * @param {number} hz\n   * @param {number} minHz\n   * @param {number} maxHz\n   * @returns {number} 横軸の画面位置\n   */\n  pointX(hz: number, minHz: number, maxHz: number): number {\n    return (\n      ((this.seekDigit(hz) - this.seekDigit(minHz)) /\n        (this.seekDigit(maxHz) - this.seekDigit(minHz))) *\n      this._canvasWidth\n    )\n  }\n\n  /**\n   * 描画メソッド\n   * @param {AvesAnalyser} avesAnalyser\n   */\n  draw(avesAnalyser: AvesAnalyser) {\n    // ─────────────────────────────────────────────────────────────────\n    // 初期化処理\n    // ─────────────────────────────────────────────────────────────────\n    const arrayLength: number = avesAnalyser.byteTimeDomainArray.length\n    this._ctx.beginPath()\n    const fontSize = 11\n    this._ctx.font = this.createFont(String(fontSize) + 'px')\n    this._ctx.fillStyle = this._bgColor\n    this._ctx.fillRect(0, 0, this._canvasWidth, this._canvasHeight)\n\n    // ─────────────────────────────────────────────────────────────────\n    // デフォルトでは2048までループ\n    // ─────────────────────────────────────────────────────────────────\n    for (let i = 0; i <= arrayLength; i++) {\n      // ─────────────────────────────────────────────────────────────────\n      // プロットする点を得る処理\n      // ─────────────────────────────────────────────────────────────────\n      const pointX = (i / arrayLength) * this._canvasWidth\n      // ─────────────────────────────────────────────────────────────────\n      // avesAnalyser.byteTimeDomainArrayの中身の数値は0~255\n      // ─────────────────────────────────────────────────────────────────\n      const pointY =\n        (1 - avesAnalyser.byteTimeDomainArray[i] / 255) * this._canvasHeight\n      if (i === 0) {\n        this._ctx.moveTo(0, pointY)\n      } else {\n        this._ctx.lineTo(pointX, pointY)\n      }\n\n      // ─────────────────────────────────────────────────────────────────\n      // X軸に目盛りを描画\n      // ─────────────────────────────────────────────────────────────────\n      const sec = i * avesAnalyser.samplingInterval()\n      const msec = sec * Math.pow(10, 3)\n      if (msec % 5 === 0) {\n        var text = Math.round(msec) + ' msec'\n        this._ctx.fillStyle = this.gridStyle\n        this._ctx.fillRect(pointX, 0, 1, this._canvasHeight)\n        this._ctx.fillStyle = this.scaleStyle\n        this._ctx.fillText(text, pointX + 4, this._canvasHeight - fontSize)\n      }\n    }\n\n    // ─────────────────────────────────────────────────────────────────\n    // グラフを描画\n    // ─────────────────────────────────────────────────────────────────\n    this._ctx.strokeStyle = this.createColor(250, 250, 250, 1)\n    this._ctx.lineWidth = 1\n    this._ctx.stroke()\n\n    // ─────────────────────────────────────────────────────────────────\n    // Y軸に目盛りを描画\n    // ─────────────────────────────────────────────────────────────────\n    var textYs = ['1.00', '0.00', '-1.00']\n    for (var i = 0, len = textYs.length; i < len; i++) {\n      var text = textYs[i]\n      var gy = ((1 - parseFloat(text)) / 2) * this._canvasHeight\n      this._ctx.fillStyle = this.gridStyle\n      this._ctx.fillRect(0, gy, this._canvasWidth, 1)\n      this._ctx.fillStyle = this.scaleStyle\n      this._ctx.fillText(text, 5, gy + 12)\n    }\n  }\n\n  /**\n   *\n   *\n   * @param {AvesAnalyser} avesAnalyser\n   * requestAnimationFrameで自分自身を呼ぶ\n   */\n  animationStart(avesAnalyser: AvesAnalyser) {\n    avesAnalyser.getByteTimeDomainData()\n    this.draw(avesAnalyser)\n\n    this._animationFrameId = requestAnimationFrame(() =>\n      this.animationStart(avesAnalyser)\n    )\n  }\n\n  animationStop() {\n    cancelAnimationFrame(this._animationFrameId)\n  }\n}\n","import Aves from './aves/Aves'\nimport AvesAnalyser from './aves/AvesAnalyser'\nimport AvesChannels from './aves/AvesChannels'\nimport DrawSpectrumAnalyser from './drawer/DrawSpectrumAnalyser'\nimport DrawTimeDomainAnalyser from './drawer/DrawTimeDomainAnalyser'\nimport DrawChannelWaves from './drawer/DrawChannelWaves'\n\nexport default class {\n  // Class member\n  public aves: Aves\n  public avesAnalyser: AvesAnalyser\n  public avesChannels: AvesChannels\n  public drawSpectrumAnalyser: DrawSpectrumAnalyser\n  public drawTimeDomainAnalyser: DrawTimeDomainAnalyser\n  public drawChannelWaves: DrawChannelWaves\n\n  constructor() {\n    this.aves = new Aves()\n  }\n\n\n  /**\n   *\n   *\n   * @param {ArrayBuffer} audioData\n   * @returns {Promise<AudioBufferSourceNode>}\n   */\n  async loadAudio(audioData: ArrayBuffer): Promise<AudioBufferSourceNode> {\n    try {\n      return await this.aves.decodeAudio(audioData)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  start(): void {\n    this.aves.start()\n    if (this.drawSpectrumAnalyser instanceof DrawSpectrumAnalyser) {\n      this.drawSpectrumAnalyser.animationStart(this.avesAnalyser)\n    }\n    if (this.drawTimeDomainAnalyser instanceof DrawTimeDomainAnalyser) {\n      this.drawTimeDomainAnalyser.animationStart(this.avesAnalyser)\n    }\n  }\n\n  stop(): void {\n    this.aves.stop()\n    if (this.drawSpectrumAnalyser instanceof DrawSpectrumAnalyser) {\n      this.drawSpectrumAnalyser.animationStop()\n    }\n    if (this.drawTimeDomainAnalyser instanceof DrawTimeDomainAnalyser) {\n      this.drawTimeDomainAnalyser.animationStop()\n    }\n  }\n\n  /**\n   *\n   *\n   * @param {HTMLCanvasElement} elm\n   * @param {number} canvasWidth\n   * @param {number} canvasHeihgt\n   */\n  createSpectrumAnalyser(\n    elm: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeihgt: number\n  ) {\n    this.avesAnalyser = new AvesAnalyser(this.aves)\n    this.drawSpectrumAnalyser = new DrawSpectrumAnalyser(\n      elm,\n      canvasWidth,\n      canvasHeihgt\n    )\n  }\n\n  /**\n   *\n   *\n   * @param {HTMLCanvasElement} elm\n   * @param {number} canvasWidth\n   * @param {number} canvasHeihgt\n   */\n  createTimeDomainAnalyser(\n    elm: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeihgt: number\n  ) {\n    this.avesAnalyser = new AvesAnalyser(this.aves)\n    this.drawTimeDomainAnalyser = new DrawTimeDomainAnalyser(\n      elm,\n      canvasWidth,\n      canvasHeihgt\n    )\n  }\n\n  /**\n   *\n   *\n   * @param {HTMLCanvasElement} elm\n   * @param {number} canvasWidth\n   * @param {number} canvasHeihgt\n   */\n  createAudioWave(\n    elm: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeihgt: number\n  ) {\n    this.avesChannels = new AvesChannels(this.aves)\n    this.drawChannelWaves = new DrawChannelWaves(\n      elm,\n      canvasWidth,\n      canvasHeihgt\n    )\n    this.drawChannelWaves.draw(this.avesChannels)\n  }\n}\n"],"sourceRoot":""}